import{g as f,t as p,h as E,j as C,i as o,c as m,a as b,f as L,k as A,r as q,I as z,d as G,l as U}from"./entry-client.8d571980.js";import{N as j}from"./NavControls.37d379fd.js";import{C as D}from"./ChessPiece.0df83c23.js";import{P as H,c as K,a as O}from"./PlaygroundContainer.bfde7056.js";import{b as I}from"./LanguagesContext.82528d9e.js";const Q=p('<svg viewBox="0 0 100 100" width="100%"><circle cx="50" cy="50" r="15" fill="black"></circle></svg>'),F=()=>f(Q),J=p('<div class="select-none grid grid-cols-8 grid-rows-8 max-h-[30rem] max-w-[30rem] border-t-2 border-r-2 bg-primary-400"></div>'),V=p('<div class="absolute t-0 l-0 w-full h-full z-10 opacity-20"></div>'),W=p('<div class="relative border-l-2 border-b-2 "><!#><!/><div class="p-1"></div></div>');function X(e){let n=7-Math.floor(e/8),r=e%8;return String.fromCodePoint(65+r)+(n+1)}const Y=e=>{let n=()=>{let l=e.board.replaceAll(`
`,"").replaceAll(" ","").split("");if(l.length!=64)throw new RangeError("Malformed literal: invalid size");return l},[r,c]=C();function d(l,i,s){if(!!e.interactive)if(s===void 0){if(l==="_")return;c({notation:i})}else s.notation===i||e.onMove(s.notation,i),c(void 0)}return(()=>{const l=f(J);return o(l,m(z,{get each(){return n()},children:(i,s)=>{let t=X(s),g=(Math.floor(s/8)+s%8)%2==0,_=()=>{let a=r();return a!==void 0&&e.possible.get(a.notation)?.has(t)===!0},u=()=>r()?.notation===t;return(()=>{const a=f(W),x=a.firstChild,[$,S]=b(x.nextSibling),y=$.nextSibling;return a.$$click=()=>d(i(),t,r()),a.classList.toggle("bg-primary-50",g),o(a,m(L,{get when(){return _()},keyed:!1,get children(){const h=f(V);return o(h,m(F,{})),h}}),$,S),o(y,m(D,{get notation(){return i()}})),A(()=>a.classList.toggle("bg-primary-200",!!u())),q(),a})()}})),l})()};E(["click"]);const Z=p('<div class="leading-tight min-h-[5em]"><!#><!/><p><!#><!/>: <!#><!/></p><p></p></div>'),ee=p("<p><!#><!/>: <!#><!/> </p>"),te=e=>{let n=I(),r=()=>n[e.result??"gameResultUndefined"],c=()=>e.isLoading?n.loading:e.playerTurn?n.playerTurn:n.aiTurn;return(()=>{const d=f(Z),l=d.firstChild,[i,s]=b(l.nextSibling),t=i.nextSibling,g=t.firstChild,[_,u]=b(g.nextSibling),a=_.nextSibling,x=a.nextSibling,[$,S]=b(x.nextSibling),y=t.nextSibling;return o(d,(()=>{const h=G(()=>!!e.opening);return()=>h()&&(()=>{const v=f(ee),k=v.firstChild,[w,N]=b(k.nextSibling),R=w.nextSibling,T=R.nextSibling,[P,B]=b(T.nextSibling);return P.nextSibling,o(v,()=>n.opening,w,N),o(v,()=>e.opening,P,B),v})()})(),i,s),o(t,()=>n.gameResult,_,u),o(t,r,$,S),o(y,c),d})()},ne=p('<h1 class="text-3xl font-black text-primary-100 mb-3"></h1>'),re=`
r n b q k b n r
p p p p p p p p
_ _ _ _ _ _ _ _
_ _ _ _ _ _ _ _
_ _ _ _ _ _ _ _
_ _ _ _ _ _ _ _
P P P P P P P P
R N B Q K B N R`;function M(e){let n=new Map;for(let[r,c]of e)n.has(r)||n.set(r,new Set),n.get(r).add(c);return n}const ce=()=>{let[e,n]=C(),[r,c]=C(!1),d=()=>e()?.board??re,l=I();U(()=>{K(!0).then(t=>{n({board:t.board,gameId:t.game_id,possible:M(t.possible),state:t.game_state,opening:t.opening})})});async function i(t,g,_){if(r()||_===void 0||!_.possible.get(t)?.has(g))return;c(!0);let u=await O(_.gameId,t,g);n({gameId:_.gameId,possible:M(u.possible),board:u.board,state:u.game_state,opening:u.opening}),c(!1)}let s=()=>e()?.state==="gameResultUndefined"&&!r();return m(j,{get children(){return m(H,{get children(){return[(()=>{const t=f(ne);return o(t,()=>l.title),t})(),m(te,{get opening(){return e()?.opening},get result(){return e()?.state},get playerTurn(){return!r()},get isLoading(){return e()===void 0}}),m(Y,{get interactive(){return s()},get board(){return d()},get possible(){return e()?.possible??new Map},onMove:(t,g)=>i(t,g,e())})]}})}})};export{ce as C};
